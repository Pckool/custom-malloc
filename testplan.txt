Workload E: In this workload, we malloc a pointer of 1000 bytes and a pointer of 5000. Should catch the the second malloc and send back an error. Then it frees both pointers. 
	Should free the first pointer and then catch the second free and send back an error. Then it tries to free both pointers again. 
	This time it should catch both of them and send back an error for both.
	
	The reason for this workload was to test the functionality of free and ensure it worked under the cercumstance that the pointer is invalid in some way.

Workoad F: In this workload, we make three char pointers and one int. Mallocs the three pointers and then tries freeing address that are not the pointer and tries to free the int. 
	Should catch these frees and send back errors. At the end it does actually free them.

	The reason for this workoad is the test the functionallity of free once again. This time with things that are not correct pointers.